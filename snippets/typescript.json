{
    "action-sheet": {
        "prefix": "i-action-sheet",
        "body": [
            "async ${1:presentActionSheet}() {",
            "\tconst ${2:actionSheet} = await this.${3:actionSheetController}.create({",
            "\t\theader: '${4:Albums}',",
            "\t\tbuttons: [{",
            "\t\t\ttext: '${5:Delete}',",
            "\t\t\trole: '${6:destructive}',",
            "\t\t\ticon: '${7:trash}',",
            "\t\t\thandler: () => {",
            "\t\t\t\t${8:console.log('Delete clicked');}",
            "\t\t\t}",
            "\t\t}, {",
            "\t\t\ttext: '${9:Share}',",
            "\t\t\ticon: '${10:share}',",
            "\t\t\thandler: () => {",
            "\t\t\t\t${11:console.log('Share clicked');}",
            "\t\t\t}",
            "\t\t}, {",
            "\t\t\ttext: '${12:Cancel}',",
            "\t\t\ticon: '${13:close}',",
            "\t\t\trole: '${14:cancel}',",
            "\t\t\thandler: () => {",
            "\t\t\t\t${15:console.log('Cancel clicked');}",
            "\t\t\t}",
            "\t\t}]",
            "\t});",
            "",
            "\tawait ${2:actionSheet}.present();",
            "}"
        ],
        "description": "Ionic alert dialog"
    },
    "action-sheet-ctrl": {
        "prefix": "i-action-sheet-ctrl",
        "body": [
            "public ${1:actionSheetController}: ActionSheetController,"
        ],
        "description": "Ionic ActionSheetController"
    },
    "alert": {
        "prefix": "i-alert",
        "body": [
            "async ${1:presentAlert}() {",
            "\tconst ${2:alert} = await this.${3:alertController}.create({",
            "\t\theader: '${4:Alert}',",
            "\t\tsubHeader: '${5:Subtitle}',",
            "\t\tmessage: '${6:This is an alert message.}',",
            "\t\tbuttons: ['${7:OK}']",
            "\t});",
            "",
            "\tawait ${2:alert}.present();",
            "}"
        ],
        "description": "Ionic alert dialog"
    },
    "alert-confirm": {
        "prefix": "i-alert-confirm",
        "body": [
            "async ${1:presentAlertConfirm}() {",
            "\tconst ${2:alert} = await this.${3:alertController}.create({",
            "\t\theader: '${4:Confirm!}',",
            "\t\tmessage: '${5:Message <strong>text</strong>!!!}',",
            "\t\tbuttons: [",
            "\t\t\t{",
            "\t\t\t\ttext: '${6:Cancel}',",
            "\t\t\t\trole: '${7:cancel}',",
            "\t\t\t\tcssClass: '${8:secondary}',",
            "\t\t\t\thandler: () => {",
            "\t\t\t\t\t${9:console.log('Confirm Cancel: blah');}",
            "\t\t\t\t}",
            "\t\t\t}, {",
            "\t\t\t\ttext: '${10:Okay}',",
            "\t\t\t\thandler: () => {",
            "\t\t\t\t\t${11:console.log('Confirm Okay');}",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t]",
            "\t});",
            "",
            "\tawait ${2:alert}.present();",
            "}"
        ],
        "description": "Ionic alert confirm dialog"
    },
    "alert-ctrl": {
        "prefix": "i-alert-ctrl",
        "body": [
            "public ${1:alertController}: AlertController,"
        ],
        "description": "Ionic AlertController"
    },
    "form": {
        "prefix": "i-form",
        "body": [
            "${1:setupForm}() {",
            "\tthis.${2:loginForm} = this.${3:formBuilder}.group({",
            "\t\t${4:email}: ['', [Validators.email, Validators.required]],",
            "\t\t${5:password}: ['', [Validators.minLength(6), Validators.required]],",
            "\t});",
            "}"
        ],
        "description": "Simple form"
    },
    "form-builder": {
        "prefix": "i-form-builder",
        "body": [
            "public ${1:formBuilder}: FormBuilder,"
        ],
        "description": "FormBuilder"
    },
    "form-group": {
        "prefix": "i-form-group",
        "body": [
            "${1:loginForm}: FormGroup;"
        ],
        "description": "FormGroup instance"
    },
    "form-value": {
        "prefix": "i-form-value",
        "body": [
            "get ${1:email}(): AbstractControl {",
            "\treturn this.loginForm.get('${1:email}');",
            "}"
        ],
        "description": "FormBuilder"
    },
    "modal": {
        "prefix": "i-modal",
        "body": [
            "async ${1:presentModal}() {",
            "\tconst ${2:modal} = await this.${3:modalController}.create({",
            "\tcomponent: ${4:ModalPage},",
            "\tcomponentProps: { ${5:value}: ${6:123} }",
            "\t});",
            "",
            "${2:modal}.onDidDismiss((${7:data}) => {",
            "\t\t${8:console.log(data);}",
            "\t})",
            "",
            "\treturn await ${2:modal}.present();",
            "}"
        ],
        "description": "Ionic modal dialog"
    },
    "modal-ctrl": {
        "prefix": "i-modal-ctrl",
        "body": [
            "public ${1:modalController}: ModalController,"
        ],
        "description": "Ionic ModalController"
    },
    "popover": {
        "prefix": "i-popover",
        "body": [
            "async ${1:presentPopover}(${2:ev}: ${3:any}) {",
            "\tconst ${4:popover} = await this.${5:popoverController}.create({",
            "\t\tcomponent: ${6:PopoverComponent},",
            "\t\tevent: ${2:ev},",
            "\t\ttranslucent: ${7:false}",
            "\t});",
            "",
            "\t${4:popover}.onDidDismiss((${8:data}) => {",
            "\t\t${9:console.log(data);}",
            "\t})",
            "",
            "\treturn await ${4:popover}.present();",
            "}"
        ],
        "description": "Ionic popover dialog"
    },
    "popover-ctrl": {
        "prefix": "i-popover-ctrl",
        "body": [
            "public ${1:popoverController}: PopoverController,"
        ],
        "description": "Ionic PopoverController"
    },
    "toast": {
        "prefix": "i-toast",
        "body": [
            "async ${1:presentToast}() {",
            "\tconst ${2:toast} = await this.${3:toastController}.create({",
            "\t\tmessage: '${4:Your settings have been saved.}',",
            "\t\tduration: ${5:2000}",
            "\t});",
            "\t${2:toast}.present();",
            "}"
        ],
        "description": "Ionic toast notification"
    },
    "toast-ctrl": {
        "prefix": "i-toast-ctrl",
        "body": [
            "public ${1:toastController}: ToastController,"
        ],
        "description": "Ionic ToastController"
    }
}